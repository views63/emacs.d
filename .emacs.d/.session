;;; Automatically generated on Wed Nov  4 11:07:05 2015
;;; Invoked by USER@DESKTOP-LQ2U3R7 using 24.5.1
(setq-default kill-ring '(#("
" 0 1 (fontified t)) #(";; lua-mode 缩" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 13 (face font-lock-comment-face fontified t)) #("进 4" 0 3 (face font-lock-comment-face fontified t)) ";放到load-path中，配置文件中添加
(require 'undo-tree)
(global-undo-tree-mode)" "现在要解决的问题是将这段代码整体向右平推三个空格的距离，也就是在这段代码每一行的行首插入三个空格。
" "现在要解决的问题是将这段代码整体向右平推三个空格的距离，也就是在这段代码每一行的行首插入三个空格。" "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp
" "
" "asymptote 可以读入文本格式的点云数据文件并对其进行渲染输出，但是有 2 个问题应当注意：

    若点数较多，就不可以用 OpenGL 进行渲染了，因为渲染速度太慢，asymptote 似乎是将每个点渲染为一个球体，这显然不对。建议渲染为二维矢量图，即向 asymptote 提供 -render 0 选项。

    若使用三维图形预览窗口调整视角，还是会因为点数过多而导致预览窗口卡死，因此应该用点云的轴向包围盒来代替点云并基于二维矢量图输出结果对视角进行迭代调整。

下面是一个最终确定了视角的示例。它是通过以下步骤的迭代而产生的：

1) 在预览窗口中调整点云包围盒的位置，交互生成 currentprojection 信息，将此信息复制到 asy 源码中使用；

2) 注释掉包围盒渲染代码，将二维矢量图渲染至 PDF 文件所得图形；

3) 若不满意就再执行步骤 1)，否则结束"))
(setq-default session-file-alist '(("~/.custom.el" 14933 16375 1 nil nil 17846 (overwrite-mode)) ("c:/Users/USER/Desktop/data.txt" 354 354 1 nil nil nil (overwrite-mode)) ("~/.emacs.d/elpa/undo-tree-20140509.522/undo-tree-autoloads.el" 1726 nil 1 nil nil 1726 (overwrite-mode)) ("c:/Users/USER/Desktop/WpfApplication1/1.tex" 3111 387 1 nil nil 3111 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20151103.944/helm-autoloads.el" 27677 nil 1 nil nil 27677 (overwrite-mode)) ("~/emacs.reg" 133 135 1 nil nil 134 (overwrite-mode)) ("f:/code_2.0.0.0/Debug.win32/hd_iphone/script/user/builder/builderDataMgr.lua" 707 149 1 nil nil 2040 (overwrite-mode)) ("f:/code_2.0.0.0/Debug.win32/hd_iphone/script/user/builder/addBuilder.lua" 41798 388 1 nil nil 41798 (overwrite-mode)) ("c:/Users/USER/Desktop/111.txt" 1182 1182 1 nil nil 1234 (overwrite-mode))))
(setq-default file-name-history '("d:/Emacs/home/.custom.el" "c:/Users/USER/Desktop/data.txt" "c:/Users/USER/Desktop/111.reg" "~/.emacs.d/elpa/undo-tree-20140509.522/undo-tree-autoloads.el" "c:/Users/USER/Desktop/WpfApplication1/1.pdf" "c:/Users/USER/Desktop/WpfApplication1/1.tex" "~/.emacs.d/elpa/helm-20151103.944/helm-autoloads.el" "c:/Users/USER/Desktop/CUIWrapContentHelper.cs" "~/emacs.reg" "f:/code_2.0.0.0/Debug.win32/hd_iphone/script/user/builder/addBuilder.lua" "f:/111.txt" "f:/code_2.0.0.0/Debug.win32/hd_iphone/script/user/builder/builderInfoUI.lua" "f:/code_2.0.0.0/Debug.win32/hd_iphone/script/user/builder/builderDataMgr.lua" "f:/code_2.0.0.0/Debug.win32/hd_iphone/script/clientConfig.lua" "c:/Users/Public/Desktop/desktop.ini" "c:/Users/USER/Desktop/CppTest/CppTest/Test.cpp" "c:/Users/USER/Desktop/111.txt"))
(setq-default search-ring '("undo-tree" "auto-com" "helm"))
(setq-default buffer-name-history '("*scratch*" " *Minibuf-1*" "*Buffer List*"))
(setq-default command-history '((kill-line nil) (kill-buffer "*scratch*") (kill-buffer " *Minibuf-1*") (kill-buffer "*Buffer List*") (buffer-menu nil) (find-file "d:/Emacs/home/.custom.el") (undo-tree-mode (quote toggle)) (package-list-packages nil) (toggle-truncate-lines nil) (erc-truncate-mode (quote toggle)) (auto-complete) (helm-gtags-find-symbol #("process" 0 7 ...)) (helm-find nil) (string-rectangle 439 787 "111") (cua-sequence-rectangle 0 111 "") (string-rectangle 1032 3190 "111") (cua-sequence-rectangle 0 100 "") (string-rectangle 4028 4237 "                    ")))
(setq-default extended-command-history '("kill-line" "buffer-menu" "undo-tree-mode" "package-list-packages" "toggle-truncate-lines" "erc-truncate-mode" "auto-complete" "helm-gtags-find-symbol" "helm-find" "copy-file"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: helm-sexp-eval (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: ignore (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default helm-gtags--completing-history '(#("process" 0 7 (fontified t))))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: helm-sexp-eval (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: ignore (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default ido-buffer-history '("*scratch*" " *Minibuf-1*" "*Buffer List*"))
(setq-default ido-file-history '(".custom.el"))
(setq-default minibuffer-history '("GetCurBuilderInfoByID" #("process" 0 7 (fontified t)) "111" "0" "100"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default smex-history '(kill-line buffer-menu undo-tree-mode package-list-packages toggle-truncate-lines erc-truncate-mode auto-complete))
(setq-default string-rectangle-history '("111" "                    "))
